{"version":3,"sources":["components/card/Card.js","components/card-list/CardList.js","components/search/Search.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","useState","cards","setCards","useEffect","axios","get","then","resp","data","catch","error","console","log","map","m","toLowerCase","includes","filter","Search","placeholder","onChange","type","App","state","e","this","setState","target","value","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0UAGaA,G,YAAO,SAACC,GACnB,OACE,sBAAKC,UAAU,iBAAf,UACE,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,6BAAKL,EAAMI,QAAQE,OACnB,6BAAKN,EAAMI,QAAQG,aCHZC,EAAW,SAACR,GAAW,IAAD,EACPS,mBAAS,IADF,mBAC1BC,EAD0B,KACnBC,EADmB,KAQjC,OANAC,qBAAU,WACRC,IAAMC,IAAI,8CACPC,MAAK,SAAAC,GAAUL,EAASK,EAAKC,SAC7BC,OAAM,SAAAC,GAAWC,QAAQC,IAAIF,SAIhC,qBAAKlB,UAAU,YAAf,SACGS,EAAMY,KAAI,SAAAC,GAAC,OAAIA,EAAEjB,KAAKkB,cAAcC,SAASzB,EAAM0B,OAAOF,eAAiB,cAAC,EAAD,CAAMpB,QAASmB,GAAQA,EAAElB,IAAS,WCZvGsB,G,MAAS,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SAElC,OAAO,uBAAO5B,UAAU,SAAS6B,KAAK,SAASF,YAAaA,EAAaC,SAAUA,MCAlEE,E,kDAEnB,WAAY/B,GAAQ,IAAD,8BACjB,cAAMA,IACDgC,MAAQ,CAAEN,OAAQ,IAFN,E,kGAQVO,GACPC,KAAKC,SAAS,CAAET,OAAQO,EAAEG,OAAOC,U,+BAGzB,IAAD,OACP,OACE,sBAAKpC,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CAAQ2B,YAAY,iBAAiBC,SAAU,SAAAI,GAAC,OAAI,EAAKJ,SAASI,MAClE,cAAC,EAAD,CAAUP,OAAQQ,KAAKF,MAAMN,SAC7B,+B,GApByBY,IAAMC,WCOxBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB3B,MAAK,YAAkD,IAA/C4B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.113c43df.chunk.js","sourcesContent":["import React from \"react\";\nimport './card.css'\n\nexport const Card = (props) => {\n  return (\n    <div className='card-container'>\n      <img alt='monster' src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\n      <h2>{props.monster.name}</h2>\n      <h3>{props.monster.email}</h3>\n    </div>)\n};\n\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./CardList.css\";\nimport { Card } from '../card/Card'\n\nexport const CardList = (props) => {\n  const [cards, setCards] = useState([]);\n  useEffect(() => {\n    axios.get('https://jsonplaceholder.typicode.com/users')\n      .then(resp => { setCards(resp.data) })\n      .catch(error => { console.log(error) })\n\n  });\n  return (\n    <div className=\"card-list\">\n      {cards.map(m => m.name.toLowerCase().includes(props.filter.toLowerCase()) ? <Card monster={m} key={m.id} /> : null)}\n    </div >)\n}\n","import React from \"react\";\nimport './Search.css'\n\nexport const Search = ({ placeholder, onChange }) => {\n\n    return <input className='search' type=\"search\" placeholder={placeholder} onChange={onChange} />\n}\n\n","import React from 'react'\nimport './App.css';\nimport { CardList } from './components/card-list/CardList'\nimport { Search } from './components/search/Search'\n\nexport default class App extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = { filter: '' }\n  }\n\n  componentDidMount() {\n  }\n\n  onChange(e) {\n    this.setState({ filter: e.target.value })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <Search placeholder=\"search monster\" onChange={e => this.onChange(e)} />\n        <CardList filter={this.state.filter} />\n        <div>\n        </div>\n      </div>\n    )\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}